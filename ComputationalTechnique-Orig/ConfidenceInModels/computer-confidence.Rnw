\SweaveOpts{keep.source=TRUE,pdf=TRUE,eps=TRUE,prefix.string=Figures/groupwise}

<<setup,echo=F>>=
source('../../../setup.R')
require(ggplot2)
@ 
 
Regression reports are generated using software you have already encountered: \code{lm} to fit a model and \code{summary} to construct the report from
the fitted model.  To illustrate: \datasetSwimming
<<>>=
swim = fetchData("swim100m.csv")
mod = lm(time ~ year + sex, data=swim)
summary(mod)
@ 


\subsection{Confidence Intervals from Standard Errors}

\index{P}{Confidence Intervals}

Given the coefficient estimate and the standard error
from the regression report, the confidence interval is easily generated.  
For a 95\% confidence interval, you just multiply the standard error by 2 
to get the margin of error.  For example, in the above, the
margin of error on \indicatorVar{sex}{M} is $2 \times 1.013 = 2.03$, or, in 
computer notation:
<<>>=
2 * 1.0129
@ 

If you want the two endpoints of the confidence interval, rather than 
just the margin of error, do these
simple calculations: (1) subtract the margin of error from the estimate; 
(2) add the margin of error to the estimate.  So, 
<<>>=
-9.798 - 2*1.0129
-9.798 + 2*1.0129
@ 
The key thing is to remember the multiplier that is applied 
to the standard error.  A multiplier of approximately 2 is for
a 95\% confidence level.  

The \function{confint} function provides a convenient way to calculate
confidence intervals directly.
\index{C}{confidence interval!computation}
\index{P}{confint@\texttt{confint}}
\index{P}{Confidence Intervals!confint@\texttt{confint}}
It calculates the exact multiplier (which depends somewhat on the
sample size)  and applies it to the standard error to produce the confidence intervals.
<<>>=
mod = lm(time ~ year + sex, data=swim)
confint(mod)
@ 

It would be convenient if the regression report included confidence
intervals rather than the standard error.  Part of the reason it
doesn't is historical: the desire to connect to the traditional by-hand calculations.



\subsection{Bootstrapping Confidence Intervals}

Confidence intervals on model coefficients can be computed using the
same bootstrapping technique introduced in Chapter \ref{chap:statistical-inference}.

Start with your fitted model. To illustrate, here is a model of
swimming time over the years, taking into account sex:
<<>>=
swim = fetchData("swim100m.csv")
lm(time ~ year + sex, data=swim)
@ 
These coefficients reflect one hypothetical draw from the
population-based sampling
distribution.  It's impossible to get another draw from the
``population'' here: the actual records are all you've got.

But to approximate sampling variation, you can treat the sample as
your population and re-sample:
<<>>=
lm(time ~ year + sex, data=resample(swim))
@ 

Constructing many such re-sampling trials and collect the results 
<<>>=
s = do(500) * lm(time ~ year + sex, data=resample(swim))
@ 
<<eval=false>>=
s
@
<<echo=false>>=
brief.output(s,5)
@ 

To find the standard error of the coefficients, just take the standard
deviation across the re-sampling trials:
<<>>=
sd(s)
@ 

Multiplying the standard error by 2 gives the approximate 95\% margin
of error.  Alternatively, you can use the \function{confint} function
to calculate this for you:
<<>>=
confint(s, method="stderr")
@ 



\subsection{Prediction Confidence Intervals}

\index{C}{confidence interval!for prediction}
\index{C}{prediction!confidence interval}

When a model is used to make a prediction, it's helpful to be able to
describe how precise the prediction is.  For instance, suppose you \datasetFeet
want to use the \texttt{kidsfeet.csv} data set to make a prediction of
the foot width of a girl whose foot length is 25 cm. 

\index{P}{predict@\texttt{predict}}
\index{P}{Modeling!predict@\texttt{predict}}

First, fit your model:
<<>>=
feet = fetchData("kidsfeet.csv")
names(kids)
levels(kids$sex)
mod = lm(width ~ length + sex, data=feet)
@ 

Now apply the model to the new data for which you want to make a
prediction.  Take care to use the right coding for categorical variables.
<<>>=
predict(mod, newdata=data.frame( length=25, sex="G" ))
@ 

In order to generate a confidence interval, the \code{predict}
operator needs to be told what type of interval is wanted.  There are
two types of prediction confidence intervals:
\begin{description}
\item[Interval on the model value] which reflects the sampling
  distributions of the coefficients themselves.  To calculate this,
  use the \code{interval="confidence"} named argument:
<<>>=
predict(mod, newdata=data.frame( length=25, sex="G" ), 
        interval="confidence")
@ 

The components named \code{lwr} and \code{upr} are the lower and upper
limits of the confidence interval, respectively.
\index{P}{interval@\texttt{interval=}!in \texttt{predict}}
\index{P}{Confidence Intervals!interval@\texttt{interval=}!in \texttt{predict}}

\item[Interval on the prediction] which includes the variation due to
  the uncertainty in the coefficients as well as the size of a typical
  residual.  To find this interval, use the
  \code{interval="prediction"} named argument:
<<>>=
predict(mod, newdata=data.frame( length=25, sex="G" ), 
        interval="confidence")
@ 

The prediction interval is larger than the model-value confidence
interval because the residual always gives additional uncertainty
around the model value.
\end{description} 


